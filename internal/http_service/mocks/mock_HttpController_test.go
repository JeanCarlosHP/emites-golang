// Code generated by mockery v2.20.0. DO NOT EDIT.

package httpservice

import mock "github.com/stretchr/testify/mock"

// MockHttpController is an autogenerated mock type for the HttpController type
type MockHttpController struct {
	mock.Mock
}

type MockHttpController_Expecter struct {
	mock *mock.Mock
}

func (_m *MockHttpController) EXPECT() *MockHttpController_Expecter {
	return &MockHttpController_Expecter{mock: &_m.Mock}
}

// Get provides a mock function with given fields:
func (_m *MockHttpController) Get() {
	_m.Called()
}

// MockHttpController_Get_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Get'
type MockHttpController_Get_Call struct {
	*mock.Call
}

// Get is a helper method to define mock.On call
func (_e *MockHttpController_Expecter) Get() *MockHttpController_Get_Call {
	return &MockHttpController_Get_Call{Call: _e.mock.On("Get")}
}

func (_c *MockHttpController_Get_Call) Run(run func()) *MockHttpController_Get_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockHttpController_Get_Call) Return() *MockHttpController_Get_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHttpController_Get_Call) RunAndReturn(run func()) *MockHttpController_Get_Call {
	_c.Call.Return(run)
	return _c
}

// NewHttpClient provides a mock function with given fields:
func (_m *MockHttpController) NewHttpClient() {
	_m.Called()
}

// MockHttpController_NewHttpClient_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'NewHttpClient'
type MockHttpController_NewHttpClient_Call struct {
	*mock.Call
}

// NewHttpClient is a helper method to define mock.On call
func (_e *MockHttpController_Expecter) NewHttpClient() *MockHttpController_NewHttpClient_Call {
	return &MockHttpController_NewHttpClient_Call{Call: _e.mock.On("NewHttpClient")}
}

func (_c *MockHttpController_NewHttpClient_Call) Run(run func()) *MockHttpController_NewHttpClient_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockHttpController_NewHttpClient_Call) Return() *MockHttpController_NewHttpClient_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHttpController_NewHttpClient_Call) RunAndReturn(run func()) *MockHttpController_NewHttpClient_Call {
	_c.Call.Return(run)
	return _c
}

// Post provides a mock function with given fields:
func (_m *MockHttpController) Post() {
	_m.Called()
}

// MockHttpController_Post_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Post'
type MockHttpController_Post_Call struct {
	*mock.Call
}

// Post is a helper method to define mock.On call
func (_e *MockHttpController_Expecter) Post() *MockHttpController_Post_Call {
	return &MockHttpController_Post_Call{Call: _e.mock.On("Post")}
}

func (_c *MockHttpController_Post_Call) Run(run func()) *MockHttpController_Post_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockHttpController_Post_Call) Return() *MockHttpController_Post_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHttpController_Post_Call) RunAndReturn(run func()) *MockHttpController_Post_Call {
	_c.Call.Return(run)
	return _c
}

// SetBody provides a mock function with given fields:
func (_m *MockHttpController) SetBody() {
	_m.Called()
}

// MockHttpController_SetBody_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetBody'
type MockHttpController_SetBody_Call struct {
	*mock.Call
}

// SetBody is a helper method to define mock.On call
func (_e *MockHttpController_Expecter) SetBody() *MockHttpController_SetBody_Call {
	return &MockHttpController_SetBody_Call{Call: _e.mock.On("SetBody")}
}

func (_c *MockHttpController_SetBody_Call) Run(run func()) *MockHttpController_SetBody_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockHttpController_SetBody_Call) Return() *MockHttpController_SetBody_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHttpController_SetBody_Call) RunAndReturn(run func()) *MockHttpController_SetBody_Call {
	_c.Call.Return(run)
	return _c
}

// SetHeaders provides a mock function with given fields:
func (_m *MockHttpController) SetHeaders() {
	_m.Called()
}

// MockHttpController_SetHeaders_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetHeaders'
type MockHttpController_SetHeaders_Call struct {
	*mock.Call
}

// SetHeaders is a helper method to define mock.On call
func (_e *MockHttpController_Expecter) SetHeaders() *MockHttpController_SetHeaders_Call {
	return &MockHttpController_SetHeaders_Call{Call: _e.mock.On("SetHeaders")}
}

func (_c *MockHttpController_SetHeaders_Call) Run(run func()) *MockHttpController_SetHeaders_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockHttpController_SetHeaders_Call) Return() *MockHttpController_SetHeaders_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHttpController_SetHeaders_Call) RunAndReturn(run func()) *MockHttpController_SetHeaders_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockHttpController interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockHttpController creates a new instance of MockHttpController. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockHttpController(t mockConstructorTestingTNewMockHttpController) *MockHttpController {
	mock := &MockHttpController{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
